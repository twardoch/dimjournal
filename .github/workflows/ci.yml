name: Test, Build, and Publish

on:
  push:
    branches: [main]
    tags: ['v[0-9]*', '[0-9]+.[0-9]+*']
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1,16 * *'

permissions:
  contents: write

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref_type }}- ${{ github.event.pull_request.number || github.sha }}


  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[testing] # Install with testing extras
          pip install flake8 # For linting
      - name: Lint with flake8
        run: flake8 src tests
      - name: Run tests
        run: pytest

  update-docs:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install pydoc-markdown
        run: python -m pip install --upgrade pip pydoc-markdown
      - name: Generate API documentation
        run: pydoc-markdown > API.md
      - name: Commit and push if it's changed
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Update API documentation'
          add: 'API.md'

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: python -m pip install --upgrade pip build
      - name: Build distribution
        run: python -m build
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
